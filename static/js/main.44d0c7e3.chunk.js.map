{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Header.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","Header","nextProps","nextState","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","rootReducer","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44d0c7e3.chunk.js","sourcesContent":["import 'tachyons';\r\n\r\nfunction Card(props){\r\n\tconst {name,email,id} = props;\r\n\treturn(\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({robots}){\r\n\tconst cardComponent = robots.map((user,i) => {\r\n\t\treturn <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n\t})\r\n\treturn(\r\n\t\t<div>\r\n\t\t    {cardComponent}\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nfunction SearchBox({searchField,searchChange}){\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\" \r\n\t\t\ttype=\"search\" \r\n\t\t\tplaceholder=\"Search robots\"\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","\r\nfunction Scroll(props){\r\n\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll',border:'4px solid black',height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n\t\t\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError:true});\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Oooops. Page is broken :(</h1>\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn this.props.children;\r\n\t}\r\n}\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\nexport default Header;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAIL';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\nimport './App.css';\r\n\r\nimport {requestRobots, setSearchField} from '../actions';\r\n\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots:state.requestRobots.robots,\r\n    isPending:state.requestRobots.isPending,\r\n    error: state.requestRobots.error\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    onSearchChange: (event) =>dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      robots:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.onRequestRobots();\r\n  }\r\n  \r\n  render(){\r\n    const {searchField, onSearchChange, robots, isPending} = this.props;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n\r\n    return !isPending ? <h1>Loading</h1> : (\r\n      <div className=\"tc\">\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants.js\"\r\n\r\nexport const setSearchField = (text) => ({\r\n    type:CHANGE_SEARCH_FIELD,\r\n    payload:text\r\n})\r\nexport const requestRobots = () => (dispatch) =>{\r\n    dispatch({ type:REQUEST_ROBOTS_PENDING});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => dispatch({type:REQUEST_ROBOTS_SUCCESS, payload:data}))\r\n    .catch(err => dispatch({type:REQUEST_ROBOTS_FAILED, payload:err}))\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { \r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants.js\"\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch,action={}) =>{\r\n    switch(action.type){\r\n        case CHANGE_SEARCH_FIELD:\r\n            //can use {...state,searchField: action.payload}\r\n        return Object.assign({}, state, {searchField: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending:false,\r\n    robots:[],\r\n    error:''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots,action={}) =>{\r\n    switch(action.type){\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({},state,{isPending:true});\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({},state,{robots:action.payload,isPending:true});\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({},state,{error:action.payload});\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { searchRobots,requestRobots } from './reducers';\r\nimport 'tachyons';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({searchRobots,requestRobots})\r\nconst store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}